<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://ellisonalves.github.io/</id><title>Ellison Alves</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2023-02-04T03:01:24+01:00</updated> <author> <name>Ellison Alves</name> <uri>https://ellisonalves.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://ellisonalves.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://ellisonalves.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2023 Ellison Alves </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>How to sort an array with Insertion Sort?</title><link href="https://ellisonalves.github.io/posts/how-to-sort-an-array-with-insertion-sort/" rel="alternate" type="text/html" title="How to sort an array with Insertion Sort?" /><published>2023-02-04T02:57:00+01:00</published> <updated>2023-02-04T02:57:00+01:00</updated> <id>https://ellisonalves.github.io/posts/how-to-sort-an-array-with-insertion-sort/</id> <content src="https://ellisonalves.github.io/posts/how-to-sort-an-array-with-insertion-sort/" /> <author> <name>Ellison Alves</name> </author> <category term="Algorithms" /> <summary> Introduction The insertion sort still executes in O(N^2) time, but sort performs better than Bubble Sort and Selection Sort. It’s an elementary sort algorithm, not too complex, and it’s often used as the final stage of more sophisticated sorts, such as quicksort. How it works? Once more, the array is divided into two logical partitions: sorted partion and unsorted partition. Before starting,... </summary> </entry> <entry><title>How to sort an array with Selection Sort?</title><link href="https://ellisonalves.github.io/posts/how-to-sort-an-array-with-selection-sort/" rel="alternate" type="text/html" title="How to sort an array with Selection Sort?" /><published>2023-02-02T02:22:00+01:00</published> <updated>2023-02-02T02:22:00+01:00</updated> <id>https://ellisonalves.github.io/posts/how-to-sort-an-array-with-selection-sort/</id> <content src="https://ellisonalves.github.io/posts/how-to-sort-an-array-with-selection-sort/" /> <author> <name>Ellison Alves</name> </author> <category term="Algorithms" /> <summary> Introduction The selection sort improves on the bubble sort by reducing the number of swaps necessary from O(n^2) to O(N). This improvement can be significant for large records that must be physically moved around in memory. (Not the case in Java, where references are moved, not entire objects). The number of comparisons continues O(n^2). How it works? This algorithm will pass through all t... </summary> </entry> <entry><title>How to sort an array with Bubble sort</title><link href="https://ellisonalves.github.io/posts/how-to-sort-an-array-with-bubble-sort/" rel="alternate" type="text/html" title="How to sort an array with Bubble sort" /><published>2023-01-31T23:14:00+01:00</published> <updated>2023-01-31T23:14:00+01:00</updated> <id>https://ellisonalves.github.io/posts/how-to-sort-an-array-with-bubble-sort/</id> <content src="https://ellisonalves.github.io/posts/how-to-sort-an-array-with-bubble-sort/" /> <author> <name>Ellison Alves</name> </author> <category term="Algorithms" /> <summary> Introduction I think this one was the first algorithm I’ve learned in college. The performance of this algorithm degrades quickly as the number of items you need to sort grows. However, this algorithm gives you a good idea of what algorithm thinking is. How it works? The main idea of this algorithm is to divide the array into two logical partitions (sorted and unsorted) and, traverse unsorte... </summary> </entry> <entry><title>Disabling TRACE request with spring</title><link href="https://ellisonalves.github.io/posts/disabling-trace-method-requests-with-spring/" rel="alternate" type="text/html" title="Disabling TRACE request with spring" /><published>2023-01-20T22:01:00+01:00</published> <updated>2023-01-20T22:56:55+01:00</updated> <id>https://ellisonalves.github.io/posts/disabling-trace-method-requests-with-spring/</id> <content src="https://ellisonalves.github.io/posts/disabling-trace-method-requests-with-spring/" /> <author> <name>Ellison Alves</name> </author> <category term="Spring" /> <summary> Introduction Recently I got a request for disabling TRACE method calls in the application for security reasons because an attacker could have access to some information that would allow them to find a breach. Solution Considering the application is using spring boot, there are some steps to follow. Change application.properties The following line should be added in the application.properties ... </summary> </entry> <entry><title>Junit and Multi-Threading Scenarios</title><link href="https://ellisonalves.github.io/posts/junit-and-multithreading-scenarios/" rel="alternate" type="text/html" title="Junit and Multi-Threading Scenarios" /><published>2021-11-23T19:15:00+01:00</published> <updated>2021-11-23T19:15:00+01:00</updated> <id>https://ellisonalves.github.io/posts/junit-and-multithreading-scenarios/</id> <content src="https://ellisonalves.github.io/posts/junit-and-multithreading-scenarios/" /> <author> <name>Ellison Alves</name> </author> <category term="Java" /> <summary> Not a long time ago I was exploring how to create an unit test for multi-threading scenarios without the need of using external libraries. I was able to achieve it by doing a pair programming session with a colleague and we had a lot of fun! That experience was so cool that I decided to invest more time on this particular problem to refactor and share what I’ve learned. Let’s start. The enviro... </summary> </entry> </feed>
